{"version":3,"sources":["redux/phonebook/phonebook-action.js","routes.js","Component/Navigation/Navigation.js","Component/AuthNav/AuthNav.js","Component/UserMenu/default-avatar.png","Component/UserMenu/UserMenu.js","Component/AppNavBar/AppNavBar.js","Component/Loader/Loader.js","Component/PrivateRoute.js","Component/PublicRoute.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","Component/UserMenu/UserMenu.module.css","Component/Container/Container.js","Component/AppNavBar/AppNavBar.module.css","Component/Container/Container.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","routes","home","register","login","contacts","Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","className","exact","to","activeClassName","AuthNav","UserMenu","dispatch","useDispatch","name","getUserName","onLogout","useCallback","authOperations","logOut","styles","container","src","defaultAvatar","alt","avatar","Button","type","onClick","variant","color","AppBar","s","Header","Spiner","height","width","PrivateRoute","isAuthenticated","redirectTo","children","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","console","log","getCurrentUser","Container","fallback","path","items","createReducer","_","payload","state","map","contact","includes","alert","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","credentials","a","post","response","data","message","logIn","getState","persistToken","get","module","exports"],"mappings":"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","file":"static/js/main.190e557b.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\nexport default routes;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport './Navigation.css';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"Navbar\">\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to={routes.home}\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {isLoggedIn && (\r\n          <li>\r\n            <NavLink\r\n              to={routes.contacts}\r\n              className=\"NavLink\"\r\n              activeClassName=\"NavLink--active\"\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// const Navigation = ({ isLoggedIn }) => {\r\n//   return (\r\n//     <nav>\r\n//       <ul className=\"Navbar\">\r\n//         <li>\r\n//           <NavLink\r\n//             exact\r\n//             to={routes.home}\r\n//             className=\"NavLink\"\r\n//             activeClassName=\"NavLink--active\"\r\n//           >\r\n//             Home\r\n//           </NavLink>\r\n//         </li>\r\n//         {isLoggedIn && (\r\n//           <li>\r\n//             <NavLink\r\n//               to={routes.contacts}\r\n//               className=\"NavLink\"\r\n//               activeClassName=\"NavLink--active\"\r\n//             >\r\n//               Contacts\r\n//             </NavLink>\r\n//           </li>\r\n//         )}\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   isLoggedIn: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// import s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <ul className=\"Navbar\">\r\n      <li\r\n      // className={s.ItemAuth}\r\n      >\r\n        <NavLink\r\n          to=\"/register\"\r\n          exact\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Сheck in\r\n        </NavLink>\r\n      </li>\r\n      <li\r\n      // className={s.ItemNav}\r\n      >\r\n        <NavLink\r\n          to=\"/login\"\r\n          exact\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.a9d44b06.png\";","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from '../UserMenu/default-avatar.png';\r\nimport styles from './UserMenu.module.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  //делаем мемоизацию, с помощью useCallback, что бы функция\r\n  // onLogout не ререндилась каждый раз:\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img src={defaultAvatar} alt=\"Avatar\" className={styles.avatar} />\r\n      <span className={styles.name}>Welcome, {name}</span>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={onLogout}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const UserMenu = ({ name, avatar, onLogout }) => (\r\n//   <div className={styles.container}>\r\n//     <img src={avatar} alt=\"Avatar\" className={styles.avatar} />\r\n//     <span className={styles.name}>Welcome, {name}</span>\r\n//     <Button type=\"button\" onClick={onLogout} variant=\"outlined\" color=\"primary\">\r\n//       Logout\r\n//     </Button>\r\n//   </div>\r\n// );\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUserName(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport s from './AppNavBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <header className={s.Header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n\r\n// const AppBar = ({ isAuthenticated }) => {\r\n//   return (\r\n//     <header className={s.Header}>\r\n//       <Navigation />\r\n//       {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spiner = () => {\r\n    return (\r\n         <div className='spinner-conteiner'>\r\n            <Loader\r\n             type=\"Circles\"\r\n             color=\"#00BFFF\"\r\n             height={100}\r\n            width={100} />\r\n        </div>\r\n    )\r\n}\r\nexport default Spiner;","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n/**\r\n * - Если маршрут приватный, и пользователь залогинен, рендерит компонент,\r\n * - В противном случае рендерит редирект на /login\r\n */\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport './styles.css';\r\nimport AppBar from './Component/AppNavBar';\r\nimport Spinner from './Component/Loader';\r\nimport Container from './Component/Container';\r\nimport { authOperations } from './redux/auth';\r\nimport PrivateRoute from './Component/PrivateRoute';\r\nimport PublicRoute from './Component/PublicRoute';\r\n// import ContactForm from './Component/ContactForm';\r\n// import Filter from './Component/Filter';\r\n// import ContactList from './Component/ContactList';\r\nconst HomeView = lazy(() =>\r\n  import('./views/HomeView.js' /* webpackChunkName: \"home-view\" */),\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import('./views/RegisterView' /*webpackChunkName: \"register-view\" */),\r\n);\r\nconst LoginView = lazy(() =>\r\n  import('./views/LoginView' /*webpackChunkName: \"login-view\" */),\r\n);\r\nconst ContactsView = lazy(() =>\r\n  import('./views/ContactsView' /*webpackChunkName: \"contacts-view\" */),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect вместо  componentDidMount');\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <Container>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <PublicRoute exact path={routes.home}>\r\n              <HomeView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute\r\n              path={routes.register}\r\n              restricted\r\n              redirectTo={routes.home}\r\n            >\r\n              <RegisterView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute\r\n              path={routes.login}\r\n              restricted\r\n              redirectTo={routes.home}\r\n            >\r\n              <LoginView />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\r\n              <ContactsView />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// class App extends Component {\r\n//   componentDidMount() {\r\n//     this.props.onGetCurrentUser();\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <AppBar />\r\n//         <Container>\r\n//           <Suspense fallback={<Spinner />}>\r\n//             <Switch>\r\n//               <PublicRoute exact path={routes.home} component={HomeView} />\r\n//               <PublicRoute\r\n//                 path={routes.register}\r\n//                 restricted\r\n//                 redirectTo={routes.home}\r\n//                 component={RegisterView}\r\n//               />\r\n//               <PublicRoute\r\n//                 path={routes.login}\r\n//                 restricted\r\n//                 redirectTo={routes.home}\r\n//                 component={LoginView}\r\n//               />\r\n//               <PrivateRoute\r\n//                 path={routes.contacts}\r\n//                 component={ContactsView}\r\n//                 redirectTo={routes.login}\r\n//               />\r\n//             </Switch>\r\n//           </Suspense>\r\n//         </Container>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onGetCurrentUser: authOperations.getCurrentUser,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import contacts from '../../json/contacts.json';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  // [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    if (state.map(contact => contact.name).includes(payload.name)) {\r\n      return alert(`${payload.name} is already exist`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { authReducer } from './auth';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, rootReducer),\r\n// });\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistToken }, //то же , что и state.auth.token//\r\n  } = getState();\r\n\r\n  if (!persistToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  getCurrentUser,\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2zLDu\",\"avatar\":\"UserMenu_avatar___a7kv\",\"name\":\"UserMenu_name__1MzP1\"};","import React from 'react';\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) =>\r\n    <div className={styles.Container}>{children}</div>\r\n    \r\nexport default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"AppNavBar_Header__1cVLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1OWI-\"};"],"sourceRoot":""}