{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","LoginView","dispatch","useDispatch","useState","email","password","state","setState","handleChange","useCallback","e","currentTarget","name","prev","handleSubmit","preventDefault","authOperations","logIn","className","onSubmit","style","autoComplete","type","onChange","variant"],"mappings":"oNAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,4JIChGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,IAAMC,EAAWC,cAMjB,EAA0BC,mBAJL,CACnBC,MAAO,GACPC,SAAU,KAEZ,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAeC,uBAAY,SAAAC,GAC/B,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMxB,EAAd,EAAcA,MACdmB,GAAS,SAAAM,GAAI,kCACRA,GADQ,kBAEVD,EAAOxB,SAET,IAEG0B,EAAeL,uBACnB,SAAAC,GACEA,EAAEK,iBACFd,EAASe,IAAeC,MAAMX,IAC9BC,EAAS,CAAEK,KAAM,GAAIR,MAAO,GAAIC,SAAU,OAE5C,CAACJ,EAAUK,IAGLF,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACf,OACE,qBAAKa,UAAU,iBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,uBAAMC,SAAUL,EAAcM,MAAO3B,EAAOC,KAAM2B,aAAa,MAA/D,UACE,wBAAOD,MAAO3B,EAAOG,MAArB,2CAEE,uBACE0B,KAAK,QACLV,KAAK,QACLxB,MAAOgB,EACPmB,SAAUf,OAGd,wBAAOY,MAAO3B,EAAOG,MAArB,iDAEE,uBACE0B,KAAK,WACLV,KAAK,WACLxB,MAAOiB,EACPkB,SAAUf,OAGd,cAAC,IAAD,CAAQc,KAAK,SAASE,QAAQ,YAA9B","file":"static/js/login-view.00dcc14f.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport './Views.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'Flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialState = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const handleChange = useCallback(e => {\r\n    const { name, value } = e.currentTarget;\r\n    setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      dispatch(authOperations.logIn(state));\r\n      setState({ name: '', email: '', password: '' });\r\n    },\r\n    [dispatch, state],\r\n  );\r\n\r\n  const { email, password } = state;\r\n  return (\r\n    <div className=\"LoginContainer\">\r\n      <div className=\"LoginSection\">\r\n        <h1 className=\"LoginTitle\">Login</h1>\r\n        <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n          <label style={styles.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <Button type=\"submit\" variant=\"contained\">\r\n            Войти\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class LoginView extends Component {\r\n//   state = {\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onLogin(this.state);\r\n\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { email, password } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"LoginContainer\">\r\n//         <div className=\"LoginSection\">\r\n//           <h1 className=\"LoginTitle\">Login</h1>\r\n//           <form\r\n//             onSubmit={this.handleSubmit}\r\n//             style={styles.form}\r\n//             autoComplete=\"off\"\r\n//           >\r\n//             <label style={styles.label}>\r\n//               Почта\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 value={email}\r\n//                 onChange={this.handleChange}\r\n//               />\r\n//             </label>\r\n//             <label style={styles.label}>\r\n//               Пароль\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 value={password}\r\n//                 onChange={this.handleChange}\r\n//               />\r\n//             </label>\r\n//             <Button type=\"submit\" variant=\"contained\">\r\n//               Войти\r\n//             </Button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogin: authOperations.logIn,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(LoginView);\r\n"],"sourceRoot":""}